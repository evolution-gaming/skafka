exclude.internal.topics = false
auto.offset.reset = "earliest"
partition.assignment.strategy = "partitionAssignmentStrategy"
heartbeat.interval.ms = 240000
check.crcs = false
auto.commit.interval.ms = 18000000
default.api.timeout.ms = 6000
fetch.max.wait.ms = 8
fetch.min.bytes = 6
group.id = "groupId"
enable.auto.commit = false
fetch.max.bytes = 7
max.partition.fetch.bytes = 9
max.poll.records = 1
max.poll.interval.ms = 2
interceptor.classes = ["interceptorClasses"]
retry.backoff.ms = 100
session.timeout.ms = 3000
isolation.level = "read_committed"
sasl.kerberos.service.name = "service_name"
sasl.kerberos.kinit.cmd = "/bin/kinit"
sasl.kerberos.min.time.before.relogin.ms = 1000
sasl.kerberos.ticket.renew.jitter = 0.1
sasl.kerberos.ticket.renew.window.factor = 0.4
sasl.login.refresh.window.factor = 0.2
sasl.login.refresh.window.jitter = 0.3
sasl.login.refresh.min.period.seconds = 20
sasl.login.refresh.buffer.seconds = 10
sasl.mechanism = "PLAIN"
sasl.client.callback.handler.class = "com.evolutiongaming.skafka.consumer.ConsumerConfigSpec"
sasl.login.callback.handler.class = "com.evolutiongaming.skafka.consumer.ConsumerConfigSpec"
sasl.login.class = "com.evolutiongaming.skafka.consumer.ConsumerConfigSpec"
sasl.jaas.config = "plain config"
ssl.keystore.type = "JKS",
ssl.keystore.key = "---key1---"
ssl.keystore.certificate.chain = "---chain---"
ssl.keystore.location = "/tmp/keystore.jks"
ssl.keystore.password = "some password 1"
ssl.truststore.certificates = "---key2---"
ssl.truststore.type = "JKS"
ssl.truststore.location = "/tmp/truststore.jks"
ssl.truststore.password = "some password 2"
ssl.endpoint.identification.algorithm = "algo"
